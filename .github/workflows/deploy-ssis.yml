name: Deploy and Run SSIS Packages

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-deploy-run:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build SSIS Project (.ispac)
        shell: powershell
        run: |
          $projectPath = "${{ github.workspace }}\MigratingTimesheet\MigratingTimesheet.dtproj"
          $outputPath = "${{ runner.temp }}\SSISOutput"
          $config = "Development"

          if (-not (Test-Path $outputPath)) {
              New-Item -Path $outputPath -ItemType Directory -Force
          }

          & "C:\ssis-tools\SSISBuild.exe" -p:"$projectPath" -o:"$outputPath" -c:"$config" -l:DIAG

          $ispacPath = Join-Path $outputPath "$config\MigratingTimesheet.ispac"
          if (-not (Test-Path $ispacPath)) {
              Write-Error ".ispac file not found at: $ispacPath"
              exit 1
          }

          Write-Output "Build successful: $ispacPath"

      - name: Deploy SSIS Project (.ispac)
        shell: powershell
        run: |
          $ispacPath = "${{ runner.temp }}\SSISOutput\Development\MigratingTimesheet.ispac"
          $sqlServer = "LAPTOP-62JJ49T4"
          $catalogName = "SSISDB"
          $folderName = "TimesheetDeploy"
          $projectName = "MigratingTimesheet"
          $deploymentWizard = "C:\Program Files\Microsoft SQL Server\160\DTS\Binn\ISDeploymentWizard.exe"

          $folderCheckQuery = "SELECT 1 FROM $catalogName.catalog.folders WHERE name = '$folderName'"
          $folderExists = sqlcmd -S "$sqlServer" -d "$catalogName" -Q "$folderCheckQuery" -E -h -1

          if ([string]::IsNullOrEmpty($folderExists)) {
              $createFolderQuery = "EXEC $catalogName.catalog.create_folder @folder_name = '$folderName';"
              sqlcmd -S "$sqlServer" -d "$catalogName" -Q "$createFolderQuery" -E
          }

          $deploymentConfig = "$env:TEMP\deploy_config.xml"
          @"
          <DeploymentConfiguration>
            <Options>
              <TargetServerName>$sqlServer</TargetServerName>
              <TargetServerVersion>SQLServer2019</TargetServerVersion>
              <TargetProjectFolderName>$folderName</TargetProjectFolderName>
              <ProjectName>$projectName</ProjectName>
              <OverwriteExisting>true</OverwriteExisting>
            </Options>
          </DeploymentConfiguration>
          "@ | Out-File -FilePath $deploymentConfig -Encoding UTF8

          & "$deploymentWizard" /Silent /SourcePath:"$ispacPath" /DestinationServer:"$sqlServer" /DestinationPath:"$catalogName\$folderName" /DeploymentConfigFile:"$deploymentConfig"

          if ($LASTEXITCODE -ne 0) {
              Write-Error "Deployment failed"
              exit 1
          }

          Write-Output "Deployment completed"

      - name: Run Deployed SSIS Package
        shell: powershell
        run: |
          $sqlServer = "LAPTOP-62JJ49T4"
          $catalog = "SSISDB"
          $folder = "TimesheetDeploy"
          $project = "MigratingTimesheet"
          $package = "MasterPackage.dtsx"  # Update to your actual package name

          $sql = @"
          DECLARE @execution_id BIGINT;
          EXEC [$catalog].catalog.create_execution
              @package_name = N'$package',
              @execution_id = @execution_id OUTPUT,
              @folder_name = N'$folder',
              @project_name = N'$project',
              @use32bitruntime = False,
              @reference_id = NULL;
          EXEC [$catalog].catalog.start_execution @execution_id;
          "@

          $sqlPath = "$env:TEMP\run_ssis.sql"
          $sql | Out-File -FilePath $sqlPath -Encoding ASCII

          sqlcmd -S "$sqlServer" -d "$catalog" -i "$sqlPath" -E

          Write-Output "Package '$package' execution triggered"
